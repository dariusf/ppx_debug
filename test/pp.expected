[@@@warning "-32-34-37"]
let value = 1
let fact n =
  let fact_original self n =
    match (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_raw ~ppx_debug_file
             ~ppx_debug_id:{
                             file = "test.ml";
                             id = 0;
                             loc = ((4, 23), (4, 24))
                           } "match" "n" n);
          n
    with
    | 0 -> 1
    | n -> n * (self (n - 1)) in
  let rec aux n =
    (let ppx_debug_file =
       let open Ppx_debug_runtime.Config in get_file (read ()) in
     Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
       ~ppx_debug_id:{ file = "test.ml"; id = 1; loc = ((4, 13), (4, 60)) }
       ~func:"fact");
    ((let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 3; loc = ((4, 13), (4, 60)) }
        "n" n);
     ());
    (let _res = fact_original aux n in
     (let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 4; loc = ((4, 13), (4, 60)) }
        "_res" _res);
     (let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 2; loc = ((4, 13), (4, 60)) }
        ~func:"fact");
     _res) in
  aux n
let _ = fun () -> ()
type v =
  | Root of {
  value: int } 
let labelled ~l  () =
  let labelled_original ~l  () = l in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 5; loc = ((12, 13), (12, 22)) }
     ~func:"labelled");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 7; loc = ((12, 13), (12, 22)) }
      "l" l);
   ());
  (let _res = labelled_original ~l () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 8; loc = ((12, 13), (12, 22)) }
      "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 6; loc = ((12, 13), (12, 22)) }
      ~func:"labelled");
   _res)
let optional ?(l= 1)  () =
  let optional_original ?(l= 1)  () = l in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 9; loc = ((13, 13), (13, 28)) }
     ~func:"optional");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 11; loc = ((13, 13), (13, 28)) }
      "l" l);
   ());
  (let _res = optional_original ~l () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 12; loc = ((13, 13), (13, 28)) }
      "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 10; loc = ((13, 13), (13, 28)) }
      ~func:"optional");
   _res)
let optional_opt ?l  () =
  let optional_opt_original ?l  () = l in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 13; loc = ((14, 17), (14, 26)) }
     ~func:"optional_opt");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 15; loc = ((14, 17), (14, 26)) }
      "l" l);
   ());
  (let _res = optional_opt_original ?l () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 16; loc = ((14, 17), (14, 26)) }
      "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 14; loc = ((14, 17), (14, 26)) }
      ~func:"optional_opt");
   _res)
let succ : int -> int =
  fun n ->
    let succ_original n = n + 1 in
    (let ppx_debug_file =
       let open Ppx_debug_runtime.Config in get_file (read ()) in
     Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
       ~ppx_debug_id:{ file = "test.ml"; id = 17; loc = ((15, 4), (15, 38)) }
       ~func:"succ");
    ((let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 19; loc = ((15, 4), (15, 38))
                      } "n" n);
     ());
    (let _res = succ_original n in
     (let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 20; loc = ((15, 4), (15, 38))
                      } "_res" _res);
     (let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 18; loc = ((15, 4), (15, 38))
                      } ~func:"succ");
     _res)
let rec ping : int -> int =
  fun n ->
    let ping_original self n =
      match (let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_raw ~ppx_debug_file
               ~ppx_debug_id:{
                               file = "test.ml";
                               id = 21;
                               loc = ((17, 43), (17, 44))
                             } "match" "n" n);
            n
      with
      | 0 -> 1
      | _ -> pong (n - 1) in
    let rec aux n =
      (let ppx_debug_file =
         let open Ppx_debug_runtime.Config in get_file (read ()) in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{ file = "test.ml"; id = 23; loc = ((17, 8), (17, 76))
                       } ~func:"ping");
      ((let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 25;
                          loc = ((17, 8), (17, 76))
                        } "n" n);
       ());
      (let _res = ping_original aux n in
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 26;
                          loc = ((17, 8), (17, 76))
                        } "_res" _res);
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 24;
                          loc = ((17, 8), (17, 76))
                        } ~func:"ping");
       _res) in
    aux n
and pong : int -> int =
  fun n ->
    let pong_original self n =
      match (let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_raw ~ppx_debug_file
               ~ppx_debug_id:{
                               file = "test.ml";
                               id = 22;
                               loc = ((18, 39), (18, 40))
                             } "match" "n" n);
            n
      with
      | 0 -> 1
      | _ -> ping (n - 1) in
    let rec aux n =
      (let ppx_debug_file =
         let open Ppx_debug_runtime.Config in get_file (read ()) in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{ file = "test.ml"; id = 27; loc = ((18, 4), (18, 72))
                       } ~func:"pong");
      ((let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 29;
                          loc = ((18, 4), (18, 72))
                        } "n" n);
       ());
      (let _res = pong_original aux n in
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 30;
                          loc = ((18, 4), (18, 72))
                        } "_res" _res);
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 28;
                          loc = ((18, 4), (18, 72))
                        } ~func:"pong");
       _res) in
    aux n
let ext =
  let rec ping1 : int -> int =
    fun n ->
      let ping1_original self n =
        match (let ppx_debug_file =
                 let open Ppx_debug_runtime.Config in get_file (read ()) in
               Ppx_debug_runtime.Trace.emit_raw ~ppx_debug_file
                 ~ppx_debug_id:{
                                 file = "test.ml";
                                 id = 31;
                                 loc = ((22, 18), (22, 19))
                               } "match" "n" n);
              n
        with
        | 0 -> 1
        | _ -> pong1 (n - 1) in
      let rec aux n =
        (let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
           ~ppx_debug_id:{
                           file = "test.ml";
                           id = 33;
                           loc = ((21, 10), (22, 52))
                         } ~func:"ping1");
        ((let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
            ~ppx_debug_id:{
                            file = "test.ml";
                            id = 35;
                            loc = ((21, 10), (22, 52))
                          } "n" n);
         ());
        (let _res = ping1_original aux n in
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
            ~ppx_debug_id:{
                            file = "test.ml";
                            id = 36;
                            loc = ((21, 10), (22, 52))
                          } "_res" _res);
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
            ~ppx_debug_id:{
                            file = "test.ml";
                            id = 34;
                            loc = ((21, 10), (22, 52))
                          } ~func:"ping1");
         _res) in
      aux n
  and pong1 : int -> int =
    fun n ->
      let pong1_original self n =
        match (let ppx_debug_file =
                 let open Ppx_debug_runtime.Config in get_file (read ()) in
               Ppx_debug_runtime.Trace.emit_raw ~ppx_debug_file
                 ~ppx_debug_id:{
                                 file = "test.ml";
                                 id = 32;
                                 loc = ((24, 18), (24, 19))
                               } "match" "n" n);
              n
        with
        | 0 -> 1
        | _ -> ping1 (n - 1) in
      let rec aux n =
        (let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
           ~ppx_debug_id:{
                           file = "test.ml";
                           id = 37;
                           loc = ((23, 6), (24, 52))
                         } ~func:"pong1");
        ((let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
            ~ppx_debug_id:{
                            file = "test.ml";
                            id = 39;
                            loc = ((23, 6), (24, 52))
                          } "n" n);
         ());
        (let _res = pong1_original aux n in
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
            ~ppx_debug_id:{
                            file = "test.ml";
                            id = 40;
                            loc = ((23, 6), (24, 52))
                          } "_res" _res);
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
            ~ppx_debug_id:{
                            file = "test.ml";
                            id = 38;
                            loc = ((23, 6), (24, 52))
                          } ~func:"pong1");
         _res) in
      aux n in
  ping1 2
let a f =
  let a_original f =
    let b f =
      let b_original f =
        let c f =
          let c_original f = f in
          (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
             ~ppx_debug_id:{
                             file = "test.ml";
                             id = 41;
                             loc = ((30, 10), (30, 15))
                           } ~func:"c");
          ((let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
              ~ppx_debug_id:{
                              file = "test.ml";
                              id = 43;
                              loc = ((30, 10), (30, 15))
                            } "f" f);
           ());
          (let _res = c_original f in
           (let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
              ~ppx_debug_id:{
                              file = "test.ml";
                              id = 44;
                              loc = ((30, 10), (30, 15))
                            } "_res" _res);
           (let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
              ~ppx_debug_id:{
                              file = "test.ml";
                              id = 42;
                              loc = ((30, 10), (30, 15))
                            } ~func:"c");
           _res) in
        c f in
      (let ppx_debug_file =
         let open Ppx_debug_runtime.Config in get_file (read ()) in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{ file = "test.ml"; id = 45; loc = ((29, 8), (31, 7))
                       } ~func:"b");
      ((let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 47; loc = ((29, 8), (31, 7))
                        } "f" f);
       ());
      (let _res = b_original f in
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 48; loc = ((29, 8), (31, 7))
                        } "_res" _res);
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 46; loc = ((29, 8), (31, 7))
                        } ~func:"b");
       _res) in
    b f in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 49; loc = ((28, 6), (33, 5)) }
     ~func:"a");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 51; loc = ((28, 6), (33, 5)) }
      "f" f);
   ());
  (let _res = a_original f in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 52; loc = ((28, 6), (33, 5)) }
      "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 50; loc = ((28, 6), (33, 5)) }
      ~func:"a");
   _res)
let sum =
  List.fold_right
    (fun c ->
       fun t ->
         let _lambda_original c t = c + t in
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
            ~ppx_debug_id:{
                            file = "test.ml";
                            id = 53;
                            loc = ((35, 26), (35, 44))
                          } ~func:"_lambda");
         ((let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
             ~ppx_debug_id:{
                             file = "test.ml";
                             id = 55;
                             loc = ((35, 26), (35, 44))
                           } "c" c);
          (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
             ~ppx_debug_id:{
                             file = "test.ml";
                             id = 56;
                             loc = ((35, 26), (35, 44))
                           } "t" t);
          ());
         (let _res = _lambda_original c t in
          (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
             ~ppx_debug_id:{
                             file = "test.ml";
                             id = 57;
                             loc = ((35, 26), (35, 44))
                           } "_res" _res);
          (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
             ~ppx_debug_id:{
                             file = "test.ml";
                             id = 54;
                             loc = ((35, 26), (35, 44))
                           } ~func:"_lambda");
          _res)) [1; 2; 3] 0
let z =
  List.map
    (fun a ->
       let _lambda_original a =
         let f x =
           let f_original x = x in
           (let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
              ~ppx_debug_id:{
                              file = "test.ml";
                              id = 58;
                              loc = ((40, 12), (40, 17))
                            } ~func:"f");
           ((let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
               ~ppx_debug_id:{
                               file = "test.ml";
                               id = 60;
                               loc = ((40, 12), (40, 17))
                             } "x" x);
            ());
           (let _res = f_original x in
            (let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
               ~ppx_debug_id:{
                               file = "test.ml";
                               id = 61;
                               loc = ((40, 12), (40, 17))
                             } "_res" _res);
            (let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
               ~ppx_debug_id:{
                               file = "test.ml";
                               id = 59;
                               loc = ((40, 12), (40, 17))
                             } ~func:"f");
            _res) in
         f a in
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 62;
                          loc = ((39, 4), (41, 10))
                        } ~func:"_lambda");
       ((let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
           ~ppx_debug_id:{
                           file = "test.ml";
                           id = 64;
                           loc = ((39, 4), (41, 10))
                         } "a" a);
        ());
       (let _res = _lambda_original a in
        (let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
           ~ppx_debug_id:{
                           file = "test.ml";
                           id = 65;
                           loc = ((39, 4), (41, 10))
                         } "_res" _res);
        (let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
           ~ppx_debug_id:{
                           file = "test.ml";
                           id = 63;
                           loc = ((39, 4), (41, 10))
                         } ~func:"_lambda");
        _res)) [1; 2; 3]
let a () =
  let a_original () =
    let x = 1 in
    let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_value ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 66; loc = ((46, 2), (46, 12)) }
      "x" x in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 67; loc = ((44, 6), (46, 12)) }
     ~func:"a");
  ();
  (let _res = a_original () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 69; loc = ((44, 6), (46, 12)) }
      "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 68; loc = ((44, 6), (46, 12)) }
      ~func:"a");
   _res)
let lambda_unhandled () =
  let lambda_unhandled_original () = List.map (fun (a, b) -> a + b) [(1, 2)] in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 70; loc = ((48, 21), (48, 65)) }
     ~func:"lambda_unhandled");
  ();
  (let _res = lambda_unhandled_original () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 72; loc = ((48, 21), (48, 65)) }
      "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 71; loc = ((48, 21), (48, 65)) }
      ~func:"lambda_unhandled");
   _res)
let keep_type_annotations t =
  let keep_type_annotations_original t = t in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 73; loc = ((49, 26), (49, 39)) }
     ~func:"keep_type_annotations");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 75; loc = ((49, 26), (49, 39)) }
      "t" t);
   ());
  (let _res = keep_type_annotations_original t in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 76; loc = ((49, 26), (49, 39)) }
      "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 74; loc = ((49, 26), (49, 39)) }
      ~func:"keep_type_annotations");
   _res)
let obj n =
  let obj_original n =
    let a =
      object
        method f x =
          let f_original x = x + 1 in
          (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
             ~ppx_debug_id:{
                             file = "test.ml";
                             id = 77;
                             loc = ((54, 15), (54, 24))
                           } ~func:"f");
          ((let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
              ~ppx_debug_id:{
                              file = "test.ml";
                              id = 79;
                              loc = ((54, 15), (54, 24))
                            } "x" x);
           ());
          (let _res = f_original x in
           (let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
              ~ppx_debug_id:{
                              file = "test.ml";
                              id = 80;
                              loc = ((54, 15), (54, 24))
                            } "_res" _res);
           (let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
              ~ppx_debug_id:{
                              file = "test.ml";
                              id = 78;
                              loc = ((54, 15), (54, 24))
                            } ~func:"f");
           _res)
      end in
    a#f (2 + n) in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 81; loc = ((51, 8), (57, 13)) }
     ~func:"obj");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 83; loc = ((51, 8), (57, 13)) }
      "n" n);
   ());
  (let _res = obj_original n in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 84; loc = ((51, 8), (57, 13)) }
      "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 82; loc = ((51, 8), (57, 13)) }
      ~func:"obj");
   _res)
class virtual clz =
  object
    method g x =
      let g_original x = x * 2 in
      (let ppx_debug_file =
         let open Ppx_debug_runtime.Config in get_file (read ()) in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{
                         file = "test.ml";
                         id = 85;
                         loc = ((61, 13), (61, 22))
                       } ~func:"g");
      ((let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 87;
                          loc = ((61, 13), (61, 22))
                        } "x" x);
       ());
      (let _res = g_original x in
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 88;
                          loc = ((61, 13), (61, 22))
                        } "_res" _res);
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{
                          file = "test.ml";
                          id = 86;
                          loc = ((61, 13), (61, 22))
                        } ~func:"g");
       _res)
  end
