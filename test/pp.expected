let value = 1
let fact n =
  let fact_original self n = match n with | 0 -> 1 | n -> n * (self (n - 1)) in
  let rec aux n =
    (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
       Ppx_debug_runtime.Config.read () in
     Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
       ~ppx_debug_id:{ file = "test.ml"; id = 0; line = 2 } ~func:"fact");
    ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
        Ppx_debug_runtime.Config.read () in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 2; line = 2 } "n" n);
     ());
    (let res = fact_original aux n in
     (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
        Ppx_debug_runtime.Config.read () in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 3; line = 2 } "res" res);
     (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
        Ppx_debug_runtime.Config.read () in
      Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 1; line = 2 } ~func:"fact");
     res) in
  aux n
let _ = fun () -> ()
type v =
  | Root of {
  value: int } 
let labelled ~l  () =
  let labelled_original ~l  () = l in
  (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
     Ppx_debug_runtime.Config.read () in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 4; line = 10 } ~func:"labelled");
  ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 6; line = 10 } "l" l);
   ());
  (let res = labelled_original ~l () in
   (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 7; line = 10 } "res" res);
   (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 5; line = 10 } ~func:"labelled");
   res)
let optional ?(l= 1)  () =
  let optional_original ?(l= 1)  () = l in
  (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
     Ppx_debug_runtime.Config.read () in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 8; line = 11 } ~func:"optional");
  ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 10; line = 11 } "l" l);
   ());
  (let res = optional_original ~l () in
   (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 11; line = 11 } "res" res);
   (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 9; line = 11 } ~func:"optional");
   res)
let optional_opt ?l  () =
  let optional_opt_original ?l  () = l in
  (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
     Ppx_debug_runtime.Config.read () in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 12; line = 12 }
     ~func:"optional_opt");
  ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 14; line = 12 } "l" l);
   ());
  (let res = optional_opt_original ?l () in
   (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 15; line = 12 } "res" res);
   (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 13; line = 12 }
      ~func:"optional_opt");
   res)
let succ : int -> int =
  fun n ->
    let succ_original n = n + 1 in
    (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
       Ppx_debug_runtime.Config.read () in
     Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
       ~ppx_debug_id:{ file = "test.ml"; id = 16; line = 13 } ~func:"succ");
    ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
        Ppx_debug_runtime.Config.read () in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 18; line = 13 } "n" n);
     ());
    (let res = succ_original n in
     (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
        Ppx_debug_runtime.Config.read () in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 19; line = 13 } "res" res);
     (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
        Ppx_debug_runtime.Config.read () in
      Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 17; line = 13 } ~func:"succ");
     res)
let rec ping : int -> int =
  fun n ->
    let ping_original self n = match n with | 0 -> 1 | _ -> pong (n - 1) in
    let rec aux n =
      (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
         Ppx_debug_runtime.Config.read () in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{ file = "test.ml"; id = 20; line = 15 } ~func:"ping");
      ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 22; line = 15 } "n" n);
       ());
      (let res = ping_original aux n in
       (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 23; line = 15 } "res" res);
       (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 21; line = 15 } ~func:"ping");
       res) in
    aux n
and pong : int -> int =
  fun n ->
    let pong_original self n = match n with | 0 -> 1 | _ -> ping (n - 1) in
    let rec aux n =
      (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
         Ppx_debug_runtime.Config.read () in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{ file = "test.ml"; id = 24; line = 16 } ~func:"pong");
      ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 26; line = 16 } "n" n);
       ());
      (let res = pong_original aux n in
       (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 27; line = 16 } "res" res);
       (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 25; line = 16 } ~func:"pong");
       res) in
    aux n
let a f =
  let a_original f =
    let b f =
      let b_original f =
        let c f =
          let c_original f = f in
          (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
             Ppx_debug_runtime.Config.read () in
           Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 28; line = 20 } ~func:"c");
          ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
              Ppx_debug_runtime.Config.read () in
            Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
              ~ppx_debug_id:{ file = "test.ml"; id = 30; line = 20 } "f" f);
           ());
          (let res = c_original f in
           (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
              Ppx_debug_runtime.Config.read () in
            Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
              ~ppx_debug_id:{ file = "test.ml"; id = 31; line = 20 } "res"
              res);
           (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
              Ppx_debug_runtime.Config.read () in
            Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
              ~ppx_debug_id:{ file = "test.ml"; id = 29; line = 20 }
              ~func:"c");
           res) in
        c f in
      (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
         Ppx_debug_runtime.Config.read () in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{ file = "test.ml"; id = 32; line = 19 } ~func:"b");
      ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 34; line = 19 } "f" f);
       ());
      (let res = b_original f in
       (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 35; line = 19 } "res" res);
       (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 33; line = 19 } ~func:"b");
       res) in
    b f in
  (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
     Ppx_debug_runtime.Config.read () in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 36; line = 18 } ~func:"a");
  ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 38; line = 18 } "f" f);
   ());
  (let res = a_original f in
   (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 39; line = 18 } "res" res);
   (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
      Ppx_debug_runtime.Config.read () in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 37; line = 18 } ~func:"a");
   res)
let sum =
  List.fold_right
    (fun c ->
       fun t ->
         let _lambda_original c t = c + t in
         (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
            Ppx_debug_runtime.Config.read () in
          Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
            ~ppx_debug_id:{ file = "test.ml"; id = 40; line = 25 }
            ~func:"_lambda");
         ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
             Ppx_debug_runtime.Config.read () in
           Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 42; line = 25 } "c" c);
          (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
             Ppx_debug_runtime.Config.read () in
           Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 43; line = 25 } "t" t);
          ());
         (let res = _lambda_original c t in
          (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
             Ppx_debug_runtime.Config.read () in
           Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 44; line = 25 } "res" res);
          (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
             Ppx_debug_runtime.Config.read () in
           Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 41; line = 25 }
             ~func:"_lambda");
          res)) [1; 2; 3] 0
let z =
  List.map
    (fun a ->
       let _lambda_original a =
         let f x =
           let f_original x = x in
           (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
              Ppx_debug_runtime.Config.read () in
            Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
              ~ppx_debug_id:{ file = "test.ml"; id = 45; line = 30 }
              ~func:"f");
           ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
               Ppx_debug_runtime.Config.read () in
             Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
               ~ppx_debug_id:{ file = "test.ml"; id = 47; line = 30 } "x" x);
            ());
           (let res = f_original x in
            (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
               Ppx_debug_runtime.Config.read () in
             Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
               ~ppx_debug_id:{ file = "test.ml"; id = 48; line = 30 } "res"
               res);
            (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
               Ppx_debug_runtime.Config.read () in
             Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
               ~ppx_debug_id:{ file = "test.ml"; id = 46; line = 30 }
               ~func:"f");
            res) in
         f a in
       (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
          Ppx_debug_runtime.Config.read () in
        Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 49; line = 29 }
          ~func:"_lambda");
       ((let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
           Ppx_debug_runtime.Config.read () in
         Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
           ~ppx_debug_id:{ file = "test.ml"; id = 51; line = 29 } "a" a);
        ());
       (let res = _lambda_original a in
        (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
           Ppx_debug_runtime.Config.read () in
         Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
           ~ppx_debug_id:{ file = "test.ml"; id = 52; line = 29 } "res" res);
        (let Ppx_debug_runtime.Config.{ file = ppx_debug_file;_}  =
           Ppx_debug_runtime.Config.read () in
         Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
           ~ppx_debug_id:{ file = "test.ml"; id = 50; line = 29 }
           ~func:"_lambda");
        res)) [1; 2; 3]
