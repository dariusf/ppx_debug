[@@@warning "-32-34-37"]
let value = 1
let fact n =
  let fact_original self n =
    match (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_value ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 0; line = 4 } "match" n);
          n
    with
    | 0 -> 1
    | n -> n * (self (n - 1)) in
  let rec aux n =
    (let ppx_debug_file =
       let open Ppx_debug_runtime.Config in get_file (read ()) in
     Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
       ~ppx_debug_id:{ file = "test.ml"; id = 1; line = 4 } ~func:"fact");
    ((let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 3; line = 4 } "n" n);
     ());
    (let _res = fact_original aux n in
     (let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 4; line = 4 } "_res" _res);
     (let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 2; line = 4 } ~func:"fact");
     _res) in
  aux n
let _ = fun () -> ()
type v =
  | Root of {
  value: int } 
let labelled ~l  () =
  let labelled_original ~l  () = l in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 5; line = 12 } ~func:"labelled");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 7; line = 12 } "l" l);
   ());
  (let _res = labelled_original ~l () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 8; line = 12 } "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 6; line = 12 } ~func:"labelled");
   _res)
let optional ?(l= 1)  () =
  let optional_original ?(l= 1)  () = l in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 9; line = 13 } ~func:"optional");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 11; line = 13 } "l" l);
   ());
  (let _res = optional_original ~l () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 12; line = 13 } "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 10; line = 13 } ~func:"optional");
   _res)
let optional_opt ?l  () =
  let optional_opt_original ?l  () = l in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 13; line = 14 }
     ~func:"optional_opt");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 15; line = 14 } "l" l);
   ());
  (let _res = optional_opt_original ?l () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 16; line = 14 } "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 14; line = 14 }
      ~func:"optional_opt");
   _res)
let succ : int -> int =
  fun n ->
    let succ_original n = n + 1 in
    (let ppx_debug_file =
       let open Ppx_debug_runtime.Config in get_file (read ()) in
     Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
       ~ppx_debug_id:{ file = "test.ml"; id = 17; line = 15 } ~func:"succ");
    ((let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 19; line = 15 } "n" n);
     ());
    (let _res = succ_original n in
     (let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 20; line = 15 } "_res" _res);
     (let ppx_debug_file =
        let open Ppx_debug_runtime.Config in get_file (read ()) in
      Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
        ~ppx_debug_id:{ file = "test.ml"; id = 18; line = 15 } ~func:"succ");
     _res)
let rec ping : int -> int =
  fun n ->
    let ping_original self n =
      match (let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_value ~ppx_debug_file
               ~ppx_debug_id:{ file = "test.ml"; id = 21; line = 17 } "match"
               n);
            n
      with
      | 0 -> 1
      | _ -> pong (n - 1) in
    let rec aux n =
      (let ppx_debug_file =
         let open Ppx_debug_runtime.Config in get_file (read ()) in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{ file = "test.ml"; id = 23; line = 17 } ~func:"ping");
      ((let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 25; line = 17 } "n" n);
       ());
      (let _res = ping_original aux n in
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 26; line = 17 } "_res" _res);
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 24; line = 17 } ~func:"ping");
       _res) in
    aux n
and pong : int -> int =
  fun n ->
    let pong_original self n =
      match (let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_value ~ppx_debug_file
               ~ppx_debug_id:{ file = "test.ml"; id = 22; line = 18 } "match"
               n);
            n
      with
      | 0 -> 1
      | _ -> ping (n - 1) in
    let rec aux n =
      (let ppx_debug_file =
         let open Ppx_debug_runtime.Config in get_file (read ()) in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{ file = "test.ml"; id = 27; line = 18 } ~func:"pong");
      ((let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 29; line = 18 } "n" n);
       ());
      (let _res = pong_original aux n in
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 30; line = 18 } "_res" _res);
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 28; line = 18 } ~func:"pong");
       _res) in
    aux n
let ext =
  let rec ping1 : int -> int =
    fun n ->
      let ping1_original self n =
        match (let ppx_debug_file =
                 let open Ppx_debug_runtime.Config in get_file (read ()) in
               Ppx_debug_runtime.Trace.emit_value ~ppx_debug_file
                 ~ppx_debug_id:{ file = "test.ml"; id = 31; line = 22 }
                 "match" n);
              n
        with
        | 0 -> 1
        | _ -> pong1 (n - 1) in
      let rec aux n =
        (let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
           ~ppx_debug_id:{ file = "test.ml"; id = 33; line = 21 }
           ~func:"ping1");
        ((let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
            ~ppx_debug_id:{ file = "test.ml"; id = 35; line = 21 } "n" n);
         ());
        (let _res = ping1_original aux n in
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
            ~ppx_debug_id:{ file = "test.ml"; id = 36; line = 21 } "_res"
            _res);
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
            ~ppx_debug_id:{ file = "test.ml"; id = 34; line = 21 }
            ~func:"ping1");
         _res) in
      aux n
  and pong1 : int -> int =
    fun n ->
      let pong1_original self n =
        match (let ppx_debug_file =
                 let open Ppx_debug_runtime.Config in get_file (read ()) in
               Ppx_debug_runtime.Trace.emit_value ~ppx_debug_file
                 ~ppx_debug_id:{ file = "test.ml"; id = 32; line = 24 }
                 "match" n);
              n
        with
        | 0 -> 1
        | _ -> ping1 (n - 1) in
      let rec aux n =
        (let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
           ~ppx_debug_id:{ file = "test.ml"; id = 37; line = 23 }
           ~func:"pong1");
        ((let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
            ~ppx_debug_id:{ file = "test.ml"; id = 39; line = 23 } "n" n);
         ());
        (let _res = pong1_original aux n in
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
            ~ppx_debug_id:{ file = "test.ml"; id = 40; line = 23 } "_res"
            _res);
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
            ~ppx_debug_id:{ file = "test.ml"; id = 38; line = 23 }
            ~func:"pong1");
         _res) in
      aux n in
  ping1 2
let a f =
  let a_original f =
    let b f =
      let b_original f =
        let c f =
          let c_original f = f in
          (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 41; line = 30 } ~func:"c");
          ((let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
              ~ppx_debug_id:{ file = "test.ml"; id = 43; line = 30 } "f" f);
           ());
          (let _res = c_original f in
           (let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
              ~ppx_debug_id:{ file = "test.ml"; id = 44; line = 30 } "_res"
              _res);
           (let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
              ~ppx_debug_id:{ file = "test.ml"; id = 42; line = 30 }
              ~func:"c");
           _res) in
        c f in
      (let ppx_debug_file =
         let open Ppx_debug_runtime.Config in get_file (read ()) in
       Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
         ~ppx_debug_id:{ file = "test.ml"; id = 45; line = 29 } ~func:"b");
      ((let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 47; line = 29 } "f" f);
       ());
      (let _res = b_original f in
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 48; line = 29 } "_res" _res);
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 46; line = 29 } ~func:"b");
       _res) in
    b f in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 49; line = 28 } ~func:"a");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 51; line = 28 } "f" f);
   ());
  (let _res = a_original f in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 52; line = 28 } "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 50; line = 28 } ~func:"a");
   _res)
let sum =
  List.fold_right
    (fun c ->
       fun t ->
         let _lambda_original c t = c + t in
         (let ppx_debug_file =
            let open Ppx_debug_runtime.Config in get_file (read ()) in
          Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
            ~ppx_debug_id:{ file = "test.ml"; id = 53; line = 35 }
            ~func:"_lambda");
         ((let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 55; line = 35 } "c" c);
          (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 56; line = 35 } "t" t);
          ());
         (let _res = _lambda_original c t in
          (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 57; line = 35 } "_res"
             _res);
          (let ppx_debug_file =
             let open Ppx_debug_runtime.Config in get_file (read ()) in
           Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
             ~ppx_debug_id:{ file = "test.ml"; id = 54; line = 35 }
             ~func:"_lambda");
          _res)) [1; 2; 3] 0
let z =
  List.map
    (fun a ->
       let _lambda_original a =
         let f x =
           let f_original x = x in
           (let ppx_debug_file =
              let open Ppx_debug_runtime.Config in get_file (read ()) in
            Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
              ~ppx_debug_id:{ file = "test.ml"; id = 58; line = 40 }
              ~func:"f");
           ((let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
               ~ppx_debug_id:{ file = "test.ml"; id = 60; line = 40 } "x" x);
            ());
           (let _res = f_original x in
            (let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
               ~ppx_debug_id:{ file = "test.ml"; id = 61; line = 40 } "_res"
               _res);
            (let ppx_debug_file =
               let open Ppx_debug_runtime.Config in get_file (read ()) in
             Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
               ~ppx_debug_id:{ file = "test.ml"; id = 59; line = 40 }
               ~func:"f");
            _res) in
         f a in
       (let ppx_debug_file =
          let open Ppx_debug_runtime.Config in get_file (read ()) in
        Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
          ~ppx_debug_id:{ file = "test.ml"; id = 62; line = 39 }
          ~func:"_lambda");
       ((let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
           ~ppx_debug_id:{ file = "test.ml"; id = 64; line = 39 } "a" a);
        ());
       (let _res = _lambda_original a in
        (let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
           ~ppx_debug_id:{ file = "test.ml"; id = 65; line = 39 } "_res" _res);
        (let ppx_debug_file =
           let open Ppx_debug_runtime.Config in get_file (read ()) in
         Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
           ~ppx_debug_id:{ file = "test.ml"; id = 63; line = 39 }
           ~func:"_lambda");
        _res)) [1; 2; 3]
let a () =
  let a_original () =
    let x = 1 in
    let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_value ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 66; line = 46 } "x" x in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 67; line = 44 } ~func:"a");
  ();
  (let _res = a_original () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 69; line = 44 } "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 68; line = 44 } ~func:"a");
   _res)
let lambda_unhandled () =
  let lambda_unhandled_original () = List.map (fun (a, b) -> a + b) [(1, 2)] in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 70; line = 48 }
     ~func:"lambda_unhandled");
  ();
  (let _res = lambda_unhandled_original () in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 72; line = 48 } "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 71; line = 48 }
      ~func:"lambda_unhandled");
   _res)
let keep_type_annotations t =
  let keep_type_annotations_original t = t in
  (let ppx_debug_file =
     let open Ppx_debug_runtime.Config in get_file (read ()) in
   Ppx_debug_runtime.Trace.emit_start ~ppx_debug_file
     ~ppx_debug_id:{ file = "test.ml"; id = 73; line = 49 }
     ~func:"keep_type_annotations");
  ((let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 75; line = 49 } "t" t);
   ());
  (let _res = keep_type_annotations_original t in
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_argument ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 76; line = 49 } "_res" _res);
   (let ppx_debug_file =
      let open Ppx_debug_runtime.Config in get_file (read ()) in
    Ppx_debug_runtime.Trace.emit_end ~ppx_debug_file
      ~ppx_debug_id:{ file = "test.ml"; id = 74; line = 49 }
      ~func:"keep_type_annotations");
   _res)
